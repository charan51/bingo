{"version":3,"sources":["assets/reward.mp3","App.js","reportWebVitals.js","index.js"],"names":["BingoItem","styled","Card","display","alignItems","justifyContent","textAlign","width","paddingRight","marginBottom","height","App","props","markComplete","e","id","target","setState","savePerson","buttonId","currentTarget","slice","nameId","emailId","nameInput","document","getElementById","value","emailInput","bingoReward","reward","rewardMe","reward1","sound","Audio","Clap","play","then","catch","error","console","log","state","completed","audioPromise","this","audio","undefined","_","err","info","row","renderRow","rowOne","bingoItems","rowTwo","rowThree","rowFour","Grid","container","justify","alignContent","spacing","map","item","xs","className","CardContent","onClick","keys","Object","forEach","rows","colOne","colTwo","colThree","colFour","x1","x2","checker","arr","every","v","celebrate","ref","type","config","angle","decay","spread","startVelocity","elementCount","elementSize","lifetime","Typography","variant","gutterBottom","bingoRow","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8050aaaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/reward.3f263cee.mp3\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Reward from \"react-rewards\";\nimport Clap from \"./assets/reward.mp3\";\nimport {\n  Typography,\n  Card,\n  Grid,\n  CardContent,\n} from \"@material-ui/core\";\nimport bingoItems from \"./assets/cards.json\";\nimport { styled } from \"@material-ui/core/styles\";\nconst BingoItem = styled(Card)({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  width: \"100%\",\n  paddingRight: \"10px\",\n  marginBottom: \"10px\",\n  height: \"100px\",\n});\n\nconst CompletedItem = styled(Card)({\n  textAlign: \"center\",\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n      6: false,\n      7: false,\n      8: false,\n      9: false,\n      10: false,\n      11: false,\n      completed: 0,\n    };\n  }\n  playAudio() {\n    const audioPromise = this.audio.play();\n    if (audioPromise !== undefined) {\n      audioPromise\n        .then((_) => {\n          // autoplay started\n        })\n        .catch((err) => {\n          // catch dom exception\n          console.info(err);\n        });\n    }\n  }\n  markComplete = (e) => {\n    const id = e.target.id;\n    let completed = 0;\n    this.setState({ [id]: true });\n  };\n\n  savePerson = (e) => {\n    const buttonId = e.currentTarget.id.slice(-1);\n    const nameId = \"name\" + buttonId;\n    const emailId = \"email\" + buttonId;\n    const nameInput = document.getElementById(nameId).value;\n    const emailInput = document.getElementById(emailId).value;\n    this.setState({ [nameId]: nameInput, [emailId]: emailInput });\n  };\n\n  bingoRow(row) {\n    let rowOne = bingoItems.slice(0, 4);\n    let rowTwo = bingoItems.slice(4, 8);\n    let rowThree = bingoItems.slice(8, 12);\n    let rowFour = bingoItems.slice(12, 16);\n    let renderRow;\n    switch (row) {\n      case 1:\n        renderRow = rowOne;\n        break;\n      case 2:\n        renderRow = rowTwo;\n        break;\n      case 3:\n        renderRow = rowThree;\n        break;\n      case 4:\n        renderRow = rowFour;\n        break;\n      default:\n        renderRow = rowOne;\n    }\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        alignContent=\"center\"\n        spacing={3}\n      >\n        {renderRow.map((item) => {\n          const id = item.id;\n          if (this.state[id] === true) {\n            return (\n              <Grid item xs={2} justifyContent=\"center\" key={item.id}>\n              <BingoItem id={item.id} className=\"markCompleted cardItem\">\n                <CardContent className=\"cardC\">\n                 \n                  <div className=\"strike\"> {item.item}</div>\n                </CardContent>\n              </BingoItem>\n            </Grid>\n            );\n          } else {\n            return (\n              <Grid item xs={2} justifyContent=\"center\" key={item.id}>\n                <BingoItem className=\"cardItem\"  id={item.id} onClick={this.markComplete}>\n                  <CardContent className=\"cardC\">\n                  \n                    <div> {item.item}</div>\n                  </CardContent>\n                </BingoItem>\n              </Grid>\n            );\n          }\n        })}\n      </Grid>\n    );\n  }\nbingoReward = () => {\n  this.reward.rewardMe();\n      this.reward1.rewardMe();\n      this.sound = new Audio(Clap);\n      this.sound\n        .play()\n        .then(() => {\n          // Audio is playing.\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n}\n  render() {\n    const keys = Object.keys(this.state);\n    keys.forEach((rows) => {});\n    let rowOne = keys\n      .slice(0, 4)\n      .map((item) => this.state[item] && this.state[item]);\n    let rowTwo = keys\n      .slice(4, 8)\n      .map((item) => this.state[item] && this.state[item]);\n    let rowThree = keys\n      .slice(8, 12)\n      .map((item) => this.state[item] && this.state[item]);\n    let rowFour = keys\n      .slice(12, 16)\n      .map((item) => this.state[item] && this.state[item]);\n    let colOne = [0, 4, 8, 12].map(\n      (item) => this.state[item] && this.state[item]\n    );\n    let colTwo = [1, 5, 9, 13].map(\n      (item) => this.state[item] && this.state[item]\n    );\n    let colThree = [2, 6, 10, 14].map(\n      (item) => this.state[item] && this.state[item]\n    );\n    let colFour = [3, 7, 11, 15].map(\n      (item) => this.state[item] && this.state[item]\n    );\n    let x1 = [0, 5, 10, 15].map((item) => this.state[item] && this.state[item]);\n    let x2 = [3, 6, 9, 12].map((item) => this.state[item] && this.state[item]);\n    let checker = (arr) => arr.every((v) => v === true);\n    let celebrate = false;\n    if (checker(rowOne)) {\n      \n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(rowTwo)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(rowThree)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(rowFour)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(colOne)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(colTwo)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(colThree)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(colFour)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(x1)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    if (checker(x2)) {\n      celebrate = true;\n      this.bingoReward();\n    }\n    return (\n      <div className={celebrate && \"rewardBg\"}>\n        <div className={celebrate && \"rewardContein\"}>\n          <Reward\n            ref={(ref) => {\n              this.reward = ref;\n            }}\n            type=\"emoji\"\n            config={{\n              angle: 90,\n              decay: 0.91,\n              spread: 900,\n              startVelocity: 50,\n              elementCount: 200,\n              elementSize: 16,\n              lifetime: 100,\n            }}\n          ></Reward>\n          <Reward\n            ref={(ref) => {\n              this.reward1 = ref;\n            }}\n            type=\"memphis\"\n          ></Reward>\n        </div>\n        <Grid container justify=\"center\" alignItems=\"center\">\n        <Typography variant='h3' gutterBottom>\n          {celebrate ? <h1>BINGO!!!!</h1> : <h3>Lets play Bingo</h3>}\n      </Typography>\n      </Grid>\n\n        <div className=\"bingoContainer\">\n          {this.bingoRow(1)}\n          {this.bingoRow(2)}\n          {this.bingoRow(3)}\n          {this.bingoRow(4)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}